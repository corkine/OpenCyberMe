# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing with clojure, read the docs:
# https://circleci.com/docs/2.0/language-clojure/ for more details
version: 2.1

orbs:
  slack: circleci/slack@4.8.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/clojure:1.10-node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: lein deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

      # run tests!
      - run: lein test

      # - run: lein uberjar

#      - store_artifacts:
#          path: target/uberjar/cyberme.jar

      - slack/notify:
          channel: server

  deploy:
    machine:
      enabled: true
    working_directory: ~/repo
    steps:
      - run:
          name: Deploy Over SSH
          command: |
            scp ~/repo/target/uberjar/cybere.jar "$SSH_USER@$SSH_HOST:$SSH_DEPLOY_PATH"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  build_deploy_sequence:
    jobs:
      - build
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only:
#                - cyber-me
#                - circleci-project-setup